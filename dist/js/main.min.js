"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var a=Object.prototype.toString.call(r).slice(8,-1);return"Map"===(a="Object"===a&&r.constructor?r.constructor.name:a)||"Set"===a?Array.from(r):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(r,e):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var a=0,t=new Array(e);a<e;a++)t[a]=r[a];return t}var cardImgs=["one","one","two","two","three","three","four","four","five","five","six","six","seven","seven","eight","eight","nine","nine"],allCards=document.querySelectorAll("div"),cards=_toConsumableArray(allCards),startTime=(new Date).getTime(),activeCard="",activeCards=[],gamePairs=cards.length/2,gameResult=0,clickCard=function e(r){(activeCard=r.target).classList.remove("hidden"),0!==activeCards.length?(cards.forEach(function(r){return r.removeEventListener("click",e)}),activeCards[1]=activeCard,setTimeout(function(){activeCards[0].className===activeCards[1].className?activeCards.forEach(function(r){r.classList.remove("hidden"),r.classList.add("guessed"),gameResult++,gamePairs.length}):activeCards.forEach(function(r){r.classList.add("hidden")}),activeCard="",activeCards.length=0,cards.forEach(function(r){return r.addEventListener("click",e)})},500)):activeCards[0]=activeCard},init=function(){cards.forEach(function(r){var e=Math.floor(Math.random()*cardImgs.length);r.classList.add(cardImgs[e]),cardImgs.splice(e,1)}),setTimeout(function(){cards.forEach(function(r){r.classList.add("hidden"),r.addEventListener("click",clickCard)})},2e3)};init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY2FyZEltZ3MiLCJhbGxDYXJkcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImNhcmRzIiwiX3RvQ29uc3VtYWJsZUFycmF5Iiwic3RhcnRUaW1lIiwiRGF0ZSIsImdldFRpbWUiLCJhY3RpdmVDYXJkIiwiYWN0aXZlQ2FyZHMiLCJnYW1lUGFpcnMiLCJsZW5ndGgiLCJjbGlja0NhcmQiLCJlIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiZm9yRWFjaCIsImNhcmQiLCJzZXRUaW1lb3V0IiwiY2xhc3NOYW1lIiwiYWRkIiwiZ2FtZVJlc3VsdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJNYXRoIiwicmFuZG9tIiwicG9zaXRpb24iLCJzcGxpY2UiXSwibWFwcGluZ3MiOiIrK0JBQUEsSUFBTUEsU0FBVyxDQUFDLE1BQU8sTUFBTyxNQUFPLE1BQU8sUUFBUyxRQUNuRCxPQUFRLE9BQVEsT0FBUSxPQUFRLE1BQU8sTUFBTyxRQUFTLFFBQ3ZELFFBQVMsUUFBUyxPQUFRLFFBRXhCQyxTQUFXQyxTQUFTQyxpQkFBaUIsT0FFdkNDLE1BQUtDLG1CQUFPSixVQUVWSyxXQUFZLElBQUlDLE1BQU9DLFVBRXpCQyxXQUFhLEdBQ2JDLFlBQWMsR0FFWkMsVUFBWVAsTUFBTVEsT0FBUyxFQWIzQlosV0FBWSxFQWdCWmEsVUFBWSxTQUFaQSxFQUFZQyxJQVZkVixXQUFLVSxFQUFBQyxRQVlNQyxVQUFVQyxPQUFPLFVBUmhDLElBQUlSLFlBQUpHLFFBTU1DLE1BQVNLLFFBQUcsU0FBQUMsR0FBWk4sT0FBQUEsRUFBWUMsb0JBQUssUUFBQUQsS0FDbkJKLFlBQWVNLEdBQWZOLFdBV0lXLFdBQVcsV0FSWFYsWUFBQSxHQUFKVyxZQUE4QlgsWUFBQSxHQUFBVyxVQUNkWCxZQUFLRCxRQUFqQixTQUFBSyxHQUNBQSxFQUFBRSxVQUFBQyxPQUFBLFVBRUdILEVBQUFFLFVBQUFNLElBQUEsV0FDV0MsYUFBaUNaLFVBQVNFLFNBTTFDRyxZQUFGRSxRQUFtQixTQUFBSixHQUNqQkUsRUFBVU0sVUFBSUEsSUFBaEIsWUFFQWIsV0FBYyxHQUpsQkMsWUFBQUUsT0FBQSxFQURKUixNQVVPYyxRQUFBLFNBQUFDLEdBQUEsT0FBQUEsRUFBQUssaUJBQUEsUUFBQVgsTUFDSEgsTUE3QlpBLFlBQUosR0FBQUQsWUFpQ1lBLEtBQUFBLFdBQ0FDLE1BQUFBLFFBQVlFLFNBQUFBLEdBQ1pSLElBQU1jLEVBQVFPLEtBQUFOLE1BQUlNLEtBQUFDLFNBQUExQixTQUFBWSxRQUFBTyxFQUFBSCxVQUFTUSxJQUFBQSxTQUFMRyxJQUF0QjNCLFNBQUE0QixPQUFBRCxFQUFBLEtBYVJQLFdBQVcsV0FWVmhCLE1BQUFjLFFBQUEsU0FBQUMsR0FqQ0xBLEVBQUFILFVBQUFNLElBQUEsVUE4Q1lILEVBQUtLLGlCQUFpQixRQUFTWCxjQVRsQyxNQUdEYiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhcmRJbWdzID0gWydvbmUnLCAnb25lJywgJ3R3bycsICd0d28nLCAndGhyZWUnLCAndGhyZWUnLFxyXG4gICAgJ2ZvdXInLCAnZm91cicsICdmaXZlJywgJ2ZpdmUnLCAnc2l4JywgJ3NpeCcsICdzZXZlbicsICdzZXZlbicsXHJcbiAgICAnZWlnaHQnLCAnZWlnaHQnLCAnbmluZScsICduaW5lJ107XHJcblxyXG5jb25zdCBhbGxDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpO1xyXG5cclxubGV0IGNhcmRzID0gWy4uLmFsbENhcmRzXTtcclxuXHJcbmNvbnN0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG5cclxubGV0IGFjdGl2ZUNhcmQgPSAnJztcclxubGV0IGFjdGl2ZUNhcmRzID0gW107XHJcblxyXG5jb25zdCBnYW1lUGFpcnMgPSBjYXJkcy5sZW5ndGggLyAyO1xyXG5sZXQgZ2FtZVJlc3VsdCA9IDA7XHJcblxyXG5jb25zdCBjbGlja0NhcmQgPSBlID0+IHtcclxuICAgIGFjdGl2ZUNhcmQgPSBlLnRhcmdldDtcclxuICAgIGFjdGl2ZUNhcmQuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcblxyXG4gICAgaWYgKGFjdGl2ZUNhcmRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGFjdGl2ZUNhcmRzWzBdID0gYWN0aXZlQ2FyZDtcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjYXJkcy5mb3JFYWNoKGNhcmQgPT4gY2FyZC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrQ2FyZCkpO1xyXG4gICAgICAgIGFjdGl2ZUNhcmRzWzFdID0gYWN0aXZlQ2FyZDtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChhY3RpdmVDYXJkc1swXS5jbGFzc05hbWUgPT09IGFjdGl2ZUNhcmRzWzFdLmNsYXNzTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgYWN0aXZlQ2FyZHMuZm9yRWFjaChlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBlLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGUuY2xhc3NMaXN0LmFkZCgnZ3Vlc3NlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGdhbWVSZXN1bHQrKztcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZ2FtZVJlc3VsdCA9PSBnYW1lUGFpcnMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYWN0aXZlQ2FyZHMuZm9yRWFjaChlID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBlLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhY3RpdmVDYXJkID0gJyc7XHJcbiAgICAgICAgICAgIGFjdGl2ZUNhcmRzLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgICAgIGNhcmRzLmZvckVhY2goY2FyZCA9PiBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tDYXJkKSlcclxuICAgICAgICB9LCA1MDApXHJcblxyXG4gICAgfTtcclxufTtcclxuXHJcbmNvbnN0IGluaXQgPSAoKSA9PiB7XHJcbiAgICBjYXJkcy5mb3JFYWNoKGNhcmQgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2FyZEltZ3MubGVuZ3RoKTtcclxuICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoY2FyZEltZ3NbcG9zaXRpb25dKTtcclxuICAgICAgICBjYXJkSW1ncy5zcGxpY2UocG9zaXRpb24sIDEpO1xyXG4gICAgfSlcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBjYXJkcy5mb3JFYWNoKGNhcmQgPT4ge1xyXG4gICAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xpY2tDYXJkKVxyXG4gICAgICAgIH0pXHJcbiAgICB9LCAyMDAwKVxyXG59O1xyXG5cclxuaW5pdCgpOyJdfQ==
